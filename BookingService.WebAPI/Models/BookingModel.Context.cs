//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BookingService.WebAPI.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BraathenEiendomEntities : DbContext
    {
        public BraathenEiendomEntities()
            : base("name=BraathenEiendomEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<MenuItem> MenuItems { get; set; }
        public virtual DbSet<Person> People { get; set; }
        public virtual DbSet<OrganizationUnit> OrganizationUnits { get; set; }
        public virtual DbSet<OrganizationUnit_Person> OrganizationUnit_Person { get; set; }
        public virtual DbSet<PictureProperty> PictureProperties { get; set; }
        public virtual DbSet<Article_Banner> Article_Banner { get; set; }
        public virtual DbSet<Banner> Banners { get; set; }
        public virtual DbSet<UserGroup_User> UserGroup_User { get; set; }
        public virtual DbSet<UserGroup> UserGroups { get; set; }
        public virtual DbSet<Article> Articles { get; set; }
        public virtual DbSet<Article_MenuItem> Article_MenuItem { get; set; }
        public virtual DbSet<BookingMessage> BookingMessages { get; set; }
        public virtual DbSet<Preference> Preferences { get; set; }
        public virtual DbSet<Note> Notes { get; set; }
        public virtual DbSet<DataObjectPage> DataObjectPages { get; set; }
        public virtual DbSet<Article_Article> Article_Article { get; set; }
        public virtual DbSet<BookingPriceDetail> BookingPriceDetails { get; set; }
        public virtual DbSet<AgreementType> AgreementTypes { get; set; }
        public virtual DbSet<Agreement> Agreements { get; set; }
        public virtual DbSet<BookingDetail> BookingDetails { get; set; }
        public virtual DbSet<BookingServiceList> BookingServiceLists { get; set; }
        public virtual DbSet<Orderhead> Orderheads { get; set; }
        public virtual DbSet<Orderline> Orderlines { get; set; }
    
        public virtual int sel_DataView(Nullable<int> type, Nullable<int> viewID, Nullable<int> dataObjectID, Nullable<int> dataObjectCategoryID, string viewName, ObjectParameter procedureName, Nullable<int> pageNumber, Nullable<int> pageItems, ObjectParameter totalItems, ObjectParameter contentView, Nullable<bool> getParameterizedColumn)
        {
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var viewIDParameter = viewID.HasValue ?
                new ObjectParameter("ViewID", viewID) :
                new ObjectParameter("ViewID", typeof(int));
    
            var dataObjectIDParameter = dataObjectID.HasValue ?
                new ObjectParameter("DataObjectID", dataObjectID) :
                new ObjectParameter("DataObjectID", typeof(int));
    
            var dataObjectCategoryIDParameter = dataObjectCategoryID.HasValue ?
                new ObjectParameter("DataObjectCategoryID", dataObjectCategoryID) :
                new ObjectParameter("DataObjectCategoryID", typeof(int));
    
            var viewNameParameter = viewName != null ?
                new ObjectParameter("ViewName", viewName) :
                new ObjectParameter("ViewName", typeof(string));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageItemsParameter = pageItems.HasValue ?
                new ObjectParameter("PageItems", pageItems) :
                new ObjectParameter("PageItems", typeof(int));
    
            var getParameterizedColumnParameter = getParameterizedColumn.HasValue ?
                new ObjectParameter("GetParameterizedColumn", getParameterizedColumn) :
                new ObjectParameter("GetParameterizedColumn", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sel_DataView", typeParameter, viewIDParameter, dataObjectIDParameter, dataObjectCategoryIDParameter, viewNameParameter, procedureName, pageNumberParameter, pageItemsParameter, totalItems, contentView, getParameterizedColumnParameter);
        }
    }
}
